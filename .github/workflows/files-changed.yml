name: Generate Changed Files JSON

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  generate-json:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fetch base commit and origin/master
        # Fetch what to compare the commit against
        run: |
          git fetch --no-tags --prune --depth=1 origin ${{ github.event.pull_request.base.sha }}
          git fetch --no-tags --prune --depth=1 origin master
          echo "FLUTTER_ENGINE_VERSION=${{ github.event.pull_request.base.sha }}" >> "$GITHUB_ENV"

      - name: Initialize Dart SDK
        # This downloads the version of the Dart SDK for the current platform.
        run: |
          ./bin/dart --version
          cd dev/tools && ../../bin/dart pub get

      - name: Write changed files to a JSON file
        run: |
          ./bin/dart run dev/tools/bin/get_files_changed.dart --since="${{ github.event.pull_request.base.sha }}" > metadata.json

      - run: npm install fs

      # Update check run called "generate-json"
      - name: Upload metadata
        uses: actions/github-script@v6
        env:
          number: ${{ github.event.pull_request.number }}
          job: ${{ github.job }}
          conclusion: ${{ job.status }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const { data: pull } = await github.rest.pulls.get({
              ...context.repo,
              pull_number: process.env.number
            });
            const ref = pull.head.sha;

            const { data: checks } = await github.rest.checks.listForRef({
              ...context.repo,
              ref
            });

            const check = checks.check_runs.filter(c => c.name === process.env.job);
            const output = fs.readFileSync('metadata.json', 'utf8');

            const { data: result } = await github.rest.checks.update({
              ...context.repo,
              check_run_id: check[0].id,
              status: 'completed',
              conclusion: process.env.conclusion,
              output,
            });

            return result;
